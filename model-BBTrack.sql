-- MySQL Script generated by MySQL Workbench
-- Sun Oct 21 14:15:52 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema BBtrack
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema BBtrack
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `BBtrack` DEFAULT CHARACTER SET utf8 ;
USE `BBtrack` ;

-- -----------------------------------------------------
-- Table `BBtrack`.`PACIENTE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBtrack`.`PACIENTE` ;

CREATE TABLE IF NOT EXISTS `BBtrack`.`PACIENTE` (
  `idPaciente` VARCHAR(45) NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  `NUSS` VARCHAR(45) NOT NULL,
  `Sexo` ENUM("Hombre", "Mujer") NOT NULL,
  `Fecha_nacimiento` DATETIME NOT NULL,
  `Localidad` VARCHAR(45) NOT NULL,
  `Domicilio` VARCHAR(45) NOT NULL,
  `Apellidos` VARCHAR(45) NOT NULL,
  `Teléfono` VARCHAR(13) NULL,
  `Correo_electrónico` VARCHAR(45) NULL,
  `PACIENTE_idPaciente` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idPaciente`),
  CONSTRAINT `fk_PACIENTE_PACIENTE1`
    FOREIGN KEY (`PACIENTE_idPaciente`)
    REFERENCES `BBtrack`.`PACIENTE` (`idPaciente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `NUSS_UNIQUE` ON `BBtrack`.`PACIENTE` (`NUSS` ASC) VISIBLE;

CREATE INDEX `fk_PACIENTE_PACIENTE1_idx` ON `BBtrack`.`PACIENTE` (`PACIENTE_idPaciente` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `BBtrack`.`CONSULTA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBtrack`.`CONSULTA` ;

CREATE TABLE IF NOT EXISTS `BBtrack`.`CONSULTA` (
  `idCosulta` VARCHAR(45) NOT NULL,
  `Localizacion` VARCHAR(125) NOT NULL,
  `Centro_sanitario` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idCosulta`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BBtrack`.`MEDICO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBtrack`.`MEDICO` ;

CREATE TABLE IF NOT EXISTS `BBtrack`.`MEDICO` (
  `Licencia` VARCHAR(45) NOT NULL,
  `Nombre` VARCHAR(45) NOT NULL,
  `Apellidos` VARCHAR(45) NOT NULL,
  `Sexo` ENUM("Hombre", "Mujer") NOT NULL,
  `Especialidad` VARCHAR(45) NOT NULL,
  `Cargo` VARCHAR(45) NULL,
  PRIMARY KEY (`Licencia`))
ENGINE = InnoDB;

CREATE INDEX `Apellido` ON `BBtrack`.`MEDICO` (`Apellidos` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `BBtrack`.`HISTORIAL`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBtrack`.`HISTORIAL` ;

CREATE TABLE IF NOT EXISTS `BBtrack`.`HISTORIAL` (
  `IdHistorial` VARCHAR(45) NOT NULL,
  `Antecedentes` VARCHAR(255) NOT NULL,
  `Fecha_primera_consulta` DATETIME NOT NULL,
  `PACIENTE_idPaciente` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`IdHistorial`),
  CONSTRAINT `fk_HISTORIAL_PACIENTE1`
    FOREIGN KEY (`PACIENTE_idPaciente`)
    REFERENCES `BBtrack`.`PACIENTE` (`idPaciente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_HISTORIAL_PACIENTE1_idx` ON `BBtrack`.`HISTORIAL` (`PACIENTE_idPaciente` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `BBtrack`.`INFORME`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBtrack`.`INFORME` ;

CREATE TABLE IF NOT EXISTS `BBtrack`.`INFORME` (
  `idInforme` VARCHAR(45) NOT NULL,
  `Estado_paciente` VARCHAR(45) NOT NULL,
  `Conclusion` VARCHAR(255) NOT NULL,
  `HISTORIAL_IdHistorial` VARCHAR(45) NOT NULL,
  `CONSULTA_idCosulta` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idInforme`, `CONSULTA_idCosulta`),
  CONSTRAINT `fk_INFORME_HISTORIAL1`
    FOREIGN KEY (`HISTORIAL_IdHistorial`)
    REFERENCES `BBtrack`.`HISTORIAL` (`IdHistorial`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_INFORME_CONSULTA1`
    FOREIGN KEY (`CONSULTA_idCosulta`)
    REFERENCES `BBtrack`.`CONSULTA` (`idCosulta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_INFORME_HISTORIAL1_idx` ON `BBtrack`.`INFORME` (`HISTORIAL_IdHistorial` ASC) VISIBLE;

CREATE INDEX `fk_INFORME_CONSULTA1_idx` ON `BBtrack`.`INFORME` (`CONSULTA_idCosulta` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `BBtrack`.`PRUEBA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBtrack`.`PRUEBA` ;

CREATE TABLE IF NOT EXISTS `BBtrack`.`PRUEBA` (
  `idPruebas` VARCHAR(45) NOT NULL,
  `Procedencia` VARCHAR(45) NOT NULL,
  `Fecha_solicitud` DATETIME NULL,
  `Fecha_prueba` DATETIME NULL,
  `Tecnico` VARCHAR(45) NULL,
  `Observaciones` VARCHAR(255) NOT NULL,
  `Id_externo` VARCHAR(45) NOT NULL,
  `Tipo` ENUM("Rutinaria", "Especial") NOT NULL,
  `MEDICO_Licencia` VARCHAR(45) NOT NULL,
  `INFORME_idInforme` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idPruebas`, `MEDICO_Licencia`),
  CONSTRAINT `fk_PRUEBA_MEDICO1`
    FOREIGN KEY (`MEDICO_Licencia`)
    REFERENCES `BBtrack`.`MEDICO` (`Licencia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRUEBA_INFORME1`
    FOREIGN KEY (`INFORME_idInforme`)
    REFERENCES `BBtrack`.`INFORME` (`idInforme`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `IdPrueba_externo_UNIQUE` ON `BBtrack`.`PRUEBA` (`Id_externo` ASC) VISIBLE;

CREATE INDEX `Procedencia` ON `BBtrack`.`PRUEBA` (`Procedencia` ASC) VISIBLE;

CREATE INDEX `Tipo` ON `BBtrack`.`PRUEBA` (`Tipo` ASC) VISIBLE;

CREATE INDEX `fk_PRUEBA_MEDICO1_idx` ON `BBtrack`.`PRUEBA` (`MEDICO_Licencia` ASC) VISIBLE;

CREATE INDEX `fk_PRUEBA_INFORME1_idx` ON `BBtrack`.`PRUEBA` (`INFORME_idInforme` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `BBtrack`.`Paciente_has_Paciente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBtrack`.`Paciente_has_Paciente` ;

CREATE TABLE IF NOT EXISTS `BBtrack`.`Paciente_has_Paciente` (
  `Paciente_idPaciente` INT NOT NULL,
  `Paciente_NUSS` VARCHAR(45) NOT NULL,
  `Paciente_idPaciente1` INT NOT NULL,
  `Paciente_NUSS1` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Paciente_idPaciente`, `Paciente_NUSS`, `Paciente_idPaciente1`, `Paciente_NUSS1`),
  CONSTRAINT `fk_Paciente_has_Paciente_Paciente`
    FOREIGN KEY (`Paciente_idPaciente` , `Paciente_NUSS`)
    REFERENCES `BBtrack`.`PACIENTE` (`idPaciente` , `NUSS`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paciente_has_Paciente_Paciente1`
    FOREIGN KEY (`Paciente_idPaciente1` , `Paciente_NUSS1`)
    REFERENCES `BBtrack`.`PACIENTE` (`idPaciente` , `NUSS`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Paciente_has_Paciente_Paciente1_idx` ON `BBtrack`.`Paciente_has_Paciente` (`Paciente_idPaciente1` ASC, `Paciente_NUSS1` ASC) VISIBLE;

CREATE INDEX `fk_Paciente_has_Paciente_Paciente_idx` ON `BBtrack`.`Paciente_has_Paciente` (`Paciente_idPaciente` ASC, `Paciente_NUSS` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `BBtrack`.`consulta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBtrack`.`consulta` ;

CREATE TABLE IF NOT EXISTS `BBtrack`.`consulta` (
  `idconsulta` VARCHAR(45) NOT NULL,
  `localización` VARCHAR(45) NOT NULL,
  `centro_sanitario` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idconsulta`));


-- -----------------------------------------------------
-- Table `BBtrack`.`paciente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBtrack`.`paciente` ;

CREATE TABLE IF NOT EXISTS `BBtrack`.`paciente` (
  `idpaciente` VARCHAR(45) NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `nuss` VARCHAR(45) NOT NULL,
  `sexo` VARCHAR(45) NOT NULL,
  `fecha_nacimiento` DATE NOT NULL,
  `domicilio` VARCHAR(100) NOT NULL,
  `apellidos` VARCHAR(45) NOT NULL,
  `localidad` VARCHAR(45) NOT NULL,
  `paciente_idpaciente` VARCHAR(45) NOT NULL,
  `telefono` VARCHAR(13) NULL DEFAULT NULL,
  `correo_electrocnico` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`idpaciente`),
  CONSTRAINT `paciente_paciente_fk`
    FOREIGN KEY (`paciente_idpaciente`)
    REFERENCES `BBtrack`.`paciente` (`idpaciente`),
  CONSTRAINT `paciente_paciente_fk`
    FOREIGN KEY (`paciente_idpaciente`)
    REFERENCES `BBtrack`.`paciente` (`idpaciente`));

CREATE INDEX `paciente_paciente_fk` ON `BBtrack`.`paciente` (`paciente_idpaciente` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `BBtrack`.`médico`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBtrack`.`médico` ;

CREATE TABLE IF NOT EXISTS `BBtrack`.`médico` (
  `num_licencia` VARCHAR(45) NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `apellidos` VARCHAR(45) NOT NULL,
  `sexo` VARCHAR(45) NOT NULL,
  `especialidad` VARCHAR(45) NOT NULL,
  `cargo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`num_licencia`));


-- -----------------------------------------------------
-- Table `BBtrack`.`historial`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBtrack`.`historial` ;

CREATE TABLE IF NOT EXISTS `BBtrack`.`historial` (
  `fecha_primera_consulta` DATE NOT NULL,
  `estado_paciente` VARCHAR(45) NOT NULL,
  `idhistorial` VARCHAR(45) NOT NULL,
  `paciente_idpaciente` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`paciente_idpaciente`, `idhistorial`),
  CONSTRAINT `historial_paciente_fk`
    FOREIGN KEY (`paciente_idpaciente`)
    REFERENCES `BBtrack`.`paciente` (`idpaciente`),
  CONSTRAINT `historial_paciente_fk`
    FOREIGN KEY (`paciente_idpaciente`)
    REFERENCES `BBtrack`.`paciente` (`idpaciente`));


-- -----------------------------------------------------
-- Table `BBtrack`.`informe`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBtrack`.`informe` ;

CREATE TABLE IF NOT EXISTS `BBtrack`.`informe` (
  `consulta_idconsulta` VARCHAR(45) NOT NULL,
  `idinforme` VARCHAR(45) NOT NULL,
  `contenido` VARCHAR(255) NOT NULL,
  `historial_idpaciente` VARCHAR(45) NOT NULL,
  `historial_idhistorial` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idinforme`),
  CONSTRAINT `informe_consulta_fk`
    FOREIGN KEY (`consulta_idconsulta`)
    REFERENCES `BBtrack`.`consulta` (`idconsulta`),
  CONSTRAINT `informe_historial_fk`
    FOREIGN KEY (`historial_idpaciente` , `historial_idhistorial`)
    REFERENCES `BBtrack`.`historial` (`paciente_idpaciente` , `idhistorial`),
  CONSTRAINT `informe_consulta_fk`
    FOREIGN KEY (`consulta_idconsulta`)
    REFERENCES `BBtrack`.`consulta` (`idconsulta`),
  CONSTRAINT `informe_historial_fk`
    FOREIGN KEY (`historial_idpaciente` , `historial_idhistorial`)
    REFERENCES `BBtrack`.`historial` (`paciente_idpaciente` , `idhistorial`));

CREATE INDEX `informe_consulta_fk` ON `BBtrack`.`informe` (`consulta_idconsulta` ASC) VISIBLE;

CREATE INDEX `informe_historial_fk` ON `BBtrack`.`informe` (`historial_idpaciente` ASC, `historial_idhistorial` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `BBtrack`.`pruebas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBtrack`.`pruebas` ;

CREATE TABLE IF NOT EXISTS `BBtrack`.`pruebas` (
  `idprueba` VARCHAR(45) NOT NULL,
  `procedencia` VARCHAR(45) NOT NULL,
  `fecha_solicitud` DATE NOT NULL,
  `fecha_prueba` DATE NOT NULL,
  `técnico` VARCHAR(45) NOT NULL,
  `médico_num_licencia` VARCHAR(45) NOT NULL,
  `informe_idinforme` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idprueba`),
  CONSTRAINT `pruebas_informe_fk`
    FOREIGN KEY (`informe_idinforme`)
    REFERENCES `BBtrack`.`informe` (`idinforme`),
  CONSTRAINT `pruebas_médico_fk`
    FOREIGN KEY (`médico_num_licencia`)
    REFERENCES `BBtrack`.`médico` (`num_licencia`),
  CONSTRAINT `pruebas_informe_fk`
    FOREIGN KEY (`informe_idinforme`)
    REFERENCES `BBtrack`.`informe` (`idinforme`),
  CONSTRAINT `pruebas_médico_fk`
    FOREIGN KEY (`médico_num_licencia`)
    REFERENCES `BBtrack`.`médico` (`num_licencia`));

CREATE INDEX `pruebas_informe_fk` ON `BBtrack`.`pruebas` (`informe_idinforme` ASC) VISIBLE;

CREATE INDEX `pruebas_médico_fk` ON `BBtrack`.`pruebas` (`médico_num_licencia` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `BBtrack`.`es_atendido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBtrack`.`es_atendido` ;

CREATE TABLE IF NOT EXISTS `BBtrack`.`es_atendido` (
  `PACIENTE_idPaciente` VARCHAR(45) NOT NULL,
  `MEDICO_Licencia` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`MEDICO_Licencia`, `PACIENTE_idPaciente`),
  CONSTRAINT `fk_PACIENTE_has_MEDICO_PACIENTE1`
    FOREIGN KEY (`PACIENTE_idPaciente`)
    REFERENCES `BBtrack`.`PACIENTE` (`idPaciente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PACIENTE_has_MEDICO_MEDICO1`
    FOREIGN KEY (`MEDICO_Licencia`)
    REFERENCES `BBtrack`.`MEDICO` (`Licencia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_PACIENTE_has_MEDICO_MEDICO1_idx` ON `BBtrack`.`es_atendido` (`MEDICO_Licencia` ASC) VISIBLE;

CREATE INDEX `fk_PACIENTE_has_MEDICO_PACIENTE1_idx` ON `BBtrack`.`es_atendido` (`PACIENTE_idPaciente` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `BBtrack`.`atiende`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBtrack`.`atiende` ;

CREATE TABLE IF NOT EXISTS `BBtrack`.`atiende` (
  `CONSULTA_idCosulta` VARCHAR(45) NOT NULL,
  `MEDICO_Licencia` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`CONSULTA_idCosulta`, `MEDICO_Licencia`),
  CONSTRAINT `fk_CONSULTA_has_MEDICO_CONSULTA1`
    FOREIGN KEY (`CONSULTA_idCosulta`)
    REFERENCES `BBtrack`.`CONSULTA` (`idCosulta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CONSULTA_has_MEDICO_MEDICO1`
    FOREIGN KEY (`MEDICO_Licencia`)
    REFERENCES `BBtrack`.`MEDICO` (`Licencia`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_CONSULTA_has_MEDICO_MEDICO1_idx` ON `BBtrack`.`atiende` (`MEDICO_Licencia` ASC) VISIBLE;

CREATE INDEX `fk_CONSULTA_has_MEDICO_CONSULTA1_idx` ON `BBtrack`.`atiende` (`CONSULTA_idCosulta` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `BBtrack`.`asiste_a`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBtrack`.`asiste_a` ;

CREATE TABLE IF NOT EXISTS `BBtrack`.`asiste_a` (
  `PACIENTE_idPaciente` VARCHAR(45) NOT NULL,
  `CONSULTA_idCosulta` VARCHAR(45) NOT NULL,
  `Fecha_consulta` DATETIME NOT NULL,
  `Es_urgente` TINYINT NOT NULL,
  PRIMARY KEY (`PACIENTE_idPaciente`, `CONSULTA_idCosulta`),
  CONSTRAINT `fk_PACIENTE_has_CONSULTA_PACIENTE1`
    FOREIGN KEY (`PACIENTE_idPaciente`)
    REFERENCES `BBtrack`.`PACIENTE` (`idPaciente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PACIENTE_has_CONSULTA_CONSULTA1`
    FOREIGN KEY (`CONSULTA_idCosulta`)
    REFERENCES `BBtrack`.`CONSULTA` (`idCosulta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_PACIENTE_has_CONSULTA_CONSULTA1_idx` ON `BBtrack`.`asiste_a` (`CONSULTA_idCosulta` ASC) VISIBLE;

CREATE INDEX `fk_PACIENTE_has_CONSULTA_PACIENTE1_idx` ON `BBtrack`.`asiste_a` (`PACIENTE_idPaciente` ASC) VISIBLE;

USE `BBtrack` ;

-- -----------------------------------------------------
-- Placeholder table for view `BBtrack`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BBtrack`.`view1` (`id` INT);

-- -----------------------------------------------------
-- View `BBtrack`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBtrack`.`view1`;
DROP VIEW IF EXISTS `BBtrack`.`view1` ;
USE `BBtrack`;

SET SQL_MODE = '';
DROP USER IF EXISTS admin;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'admin' IDENTIFIED BY 'admin';

GRANT ALL ON `BBtrack`.* TO 'admin';
GRANT SELECT ON TABLE `BBtrack`.* TO 'admin';
GRANT SELECT, INSERT, TRIGGER ON TABLE `BBtrack`.* TO 'admin';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `BBtrack`.* TO 'admin';
GRANT EXECUTE ON ROUTINE `BBtrack`.* TO 'admin';
SET SQL_MODE = '';
DROP USER IF EXISTS informatico_clinico;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'informatico_clinico' IDENTIFIED BY 'informatico_clinico';

GRANT SELECT, INSERT, TRIGGER ON TABLE `BBtrack`.* TO 'informatico_clinico';
GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `BBtrack`.* TO 'informatico_clinico';
GRANT EXECUTE ON ROUTINE `BBtrack`.* TO 'informatico_clinico';
SET SQL_MODE = '';
DROP USER IF EXISTS clinico;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'clinico' IDENTIFIED BY 'clinico';

GRANT SELECT ON TABLE `BBtrack`.* TO 'clinico';
GRANT SELECT, INSERT, TRIGGER ON TABLE `BBtrack`.* TO 'clinico';
SET SQL_MODE = '';
DROP USER IF EXISTS tecnico;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'tecnico' IDENTIFIED BY 'tecnico';

GRANT SELECT ON TABLE `BBtrack`.* TO 'tecnico';
GRANT SELECT, INSERT, TRIGGER ON TABLE `BBtrack`.* TO 'tecnico';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
